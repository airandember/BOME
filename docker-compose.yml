version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bome-postgres
    environment:
      POSTGRES_DB: bome_db
      POSTGRES_USER: bome_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - bome-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bome-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bome-network
    restart: unless-stopped

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bome-backend
    environment:
      - DATABASE_URL=postgresql://bome_user:${DB_PASSWORD}@postgres:5432/bome_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - BUNNY_STORAGE_ZONE=${BUNNY_STORAGE_ZONE}
      - BUNNY_API_KEY=${BUNNY_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - DO_SPACES_KEY=${DO_SPACES_KEY}
      - DO_SPACES_SECRET=${DO_SPACES_SECRET}
      - DO_SPACES_ENDPOINT=${DO_SPACES_ENDPOINT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - PORT=8080
      - ENVIRONMENT=production
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - bome-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/tmp

  # Svelte Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bome-frontend
    environment:
      - PUBLIC_API_URL=${PUBLIC_API_URL}
      - PUBLIC_STRIPE_PUBLISHABLE_KEY=${PUBLIC_STRIPE_PUBLISHABLE_KEY}
      - PUBLIC_GA_TRACKING_ID=${PUBLIC_GA_TRACKING_ID}
      - PUBLIC_BUNNY_CDN_URL=${PUBLIC_BUNNY_CDN_URL}
      - PUBLIC_APP_NAME=${PUBLIC_APP_NAME}
      - PUBLIC_APP_VERSION=${PUBLIC_APP_VERSION}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - bome-network
    restart: unless-stopped

  # Admin Dashboard
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: bome-admin
    environment:
      - PUBLIC_API_URL=${PUBLIC_API_URL}
      - PUBLIC_ADMIN_API_URL=${PUBLIC_ADMIN_API_URL}
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - bome-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bome-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/sites:/etc/nginx/sites-available
      - ./configs/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - admin-dashboard
    networks:
      - bome-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  bome-network:
    driver: bridge 